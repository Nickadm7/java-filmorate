DROP TABLE if exists USERS, FRIENDSHIP, FILMS, MPA, GENRES, LIKES, FILM_GENRE, FILM_MPA_RATING CASCADE;
CREATE TABLE IF NOT EXISTS "USERS"
(
    "ID"       INTEGER AUTO_INCREMENT,
    "LOGIN"    VARCHAR(20) NOT NULL,
    "EMAIL"    VARCHAR(50) NOT NULL,
    "NAME"     VARCHAR(50),
    "BIRTHDAY" DATE,
    CONSTRAINT USERS_PK
        PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS "FRIENDSHIP"
(
    "FROM_USER_ID" INTEGER NOT NULL,
    "TO_USER_ID"   INTEGER NOT NULL,
    "STATUS"       BOOLEAN NOT NULL,
    PRIMARY KEY (FROM_USER_ID, TO_USER_ID),
    CONSTRAINT USER_FRIENDSHIP_USER FOREIGN KEY (FROM_USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "MPA"
(
    "MPA_RATING_ID" INTEGER PRIMARY KEY,
    "MPA_NAME"      VARCHAR
);
CREATE TABLE IF NOT EXISTS "FILMS"
(
    "ID"           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "NAME"         VARCHAR(100),
    "DESCRIPTION"  VARCHAR(200),
    "RELEASEDATE"  DATE,
    "DURATION"     INTEGER,
    "MPA_RATING"   INTEGER,
    CONSTRAINT FILM_MPA_RATING FOREIGN KEY (MPA_RATING) REFERENCES MPA (MPA_RATING_ID) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "GENRES"
(
    "GENRE_ID" INT                   NOT NULL,
    "NAME"     CHARACTER VARYING(50) NOT NULL,
    CONSTRAINT "GENRE_PK"
        PRIMARY KEY (GENRE_ID)
);
CREATE TABLE IF NOT EXISTS "LIKES"
(
    "FILM_ID" INTEGER,
    "USER_ID" INTEGER,
    PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT FILM_LIKE_FILM FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID) ON DELETE CASCADE,
    CONSTRAINT USER_LIKE_FILM FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "FILM_GENRE"
(
    "FILM_ID"  INTEGER NOT NULL REFERENCES FILMS (ID) ON DELETE CASCADE,
    "GENRE_ID" INTEGER NOT NULL REFERENCES GENRES (GENRE_ID) ON DELETE RESTRICT,
    PRIMARY KEY (FILM_ID, GENRE_ID)
);